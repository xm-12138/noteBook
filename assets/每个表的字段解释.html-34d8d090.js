import{_ as s,o as e,c as t,a as n}from"./app-146e4e89.js";const o={};function i(l,r){return e(),t("div",null,[...r[0]||(r[0]=[n('<h3 id="users-表" tabindex="-1"><a class="header-anchor" href="#users-表" aria-hidden="true">#</a> <strong>Users 表</strong></h3><ul><li><strong>UserID (INT, AUTO_INCREMENT, PRIMARY KEY)</strong>: 用户的唯一标识符。这是一个整数类型，自动递增，并且是主键。</li><li><strong>UserName (VARCHAR(50), NOT NULL)</strong>: 用户名。这是一个最大长度为50个字符的字符串，不允许为空。</li><li><strong>Password (VARCHAR(255), NOT NULL)</strong>: 密码。这是一个最大长度为255个字符的字符串，不允许为空。实际应用中应该存储密码的哈希值而不是明文。</li><li><strong>Email (VARCHAR(100), UNIQUE, NOT NULL)</strong>: 电子邮件地址。这是一个最大长度为100个字符的字符串，不允许为空，并且必须是唯一的。</li><li><strong>Phone (VARCHAR(20))</strong>: 联系电话。这是一个最大长度为20个字符的字符串。</li></ul><h3 id="restaurants-表" tabindex="-1"><a class="header-anchor" href="#restaurants-表" aria-hidden="true">#</a> <strong>Restaurants 表</strong></h3><ul><li><strong>RestaurantID (INT, AUTO_INCREMENT, PRIMARY KEY)</strong>: 餐馆的唯一标识符。这是一个整数类型，自动递增，并且是主键。</li><li><strong>Name (VARCHAR(100), NOT NULL)</strong>: 餐馆名称。这是一个最大长度为100个字符的字符串，不允许为空。</li><li><strong>Address (VARCHAR(255))</strong>: 餐馆地址。这是一个最大长度为255个字符的字符串。</li><li><strong>Contact (VARCHAR(20))</strong>: 联系方式。这是一个最大长度为20个字符的字符串，可以是电话或其他联系方式。</li></ul><h3 id="menus-表" tabindex="-1"><a class="header-anchor" href="#menus-表" aria-hidden="true">#</a> <strong>Menus 表</strong></h3><ul><li><strong>MenuID (INT, AUTO_INCREMENT, PRIMARY KEY)</strong>: 菜单项的唯一标识符。这是一个整数类型，自动递增，并且是主键。</li><li><strong>ItemName (VARCHAR(100), NOT NULL)</strong>: 菜单项名称。这是一个最大长度为100个字符的字符串，不允许为空。</li><li><strong>Price (DECIMAL(10, 2), NOT NULL)</strong>: 菜单项的价格。这是一个十进制数值，最多10位数字，其中2位小数，不允许为空。</li><li><strong>Description (TEXT)</strong>: 菜单项的描述。这是一个文本字段，可以存储较长的描述信息。</li><li><strong>RestaurantID (INT, FOREIGN KEY)</strong>: 所属餐馆的ID。这是一个外键，引用 <code>Restaurants</code> 表中的 <code>RestaurantID</code> 字段。</li></ul><h3 id="orders-表" tabindex="-1"><a class="header-anchor" href="#orders-表" aria-hidden="true">#</a> <strong>Orders 表</strong></h3><ul><li><strong>OrderID (INT, AUTO_INCREMENT, PRIMARY KEY)</strong>: 订单的唯一标识符。这是一个整数类型，自动递增，并且是主键。</li><li><strong>UserID (INT, FOREIGN KEY)</strong>: 下订单用户的ID。这是一个外键，引用 <code>Users</code> 表中的 <code>UserID</code> 字段。</li><li><strong>OrderDate (DATETIME, DEFAULT CURRENT_TIMESTAMP)</strong>: 订单日期和时间。这是一个日期时间字段，默认值为当前时间戳。</li><li><strong>TotalAmount (DECIMAL(10, 2))</strong>: 订单总金额。这是一个十进制数值，最多10位数字，其中2位小数。</li><li><strong>Status (ENUM(&#39;Pending&#39;, &#39;Processing&#39;, &#39;Completed&#39;, &#39;Cancelled&#39;), DEFAULT &#39;Pending&#39;)</strong>: 订单状态。这是一个枚举类型，表示订单的状态，可以是“待处理”、“处理中”、“已完成”或“已取消”，默认值为“待处理”。</li></ul><h3 id="orderitems-表" tabindex="-1"><a class="header-anchor" href="#orderitems-表" aria-hidden="true">#</a> <strong>OrderItems 表</strong></h3><ul><li><strong>OrderItemID (INT, AUTO_INCREMENT, PRIMARY KEY)</strong>: 订单项的唯一标识符。这是一个整数类型，自动递增，并且是主键。</li><li><strong>OrderID (INT, FOREIGN KEY)</strong>: 所属订单的ID。这是一个外键，引用 <code>Orders</code> 表中的 <code>OrderID</code> 字段。</li><li><strong>MenuID (INT, FOREIGN KEY)</strong>: 菜单项的ID。这是一个外键，引用 <code>Menus</code> 表中的 <code>MenuID</code> 字段。</li><li><strong>Quantity (INT, NOT NULL)</strong>: 数量。这是一个整数类型，表示订购的数量，不允许为空。</li><li><strong>Subtotal (DECIMAL(10, 2), NOT NULL)</strong>: 子总价。这是一个十进制数值，表示该订单项的小计金额，不允许为空。</li></ul>',10)])])}const d=s(o,[["render",i],["__file","每个表的字段解释.html.vue"]]);export{d as default};
